##BI问题集锦
问题一：
描述：
首页根据用户权限动态显示
用户权限后台进行修改
用户信息在首页显示前必须先更新完成
思路一：
不考虑请求情况，在请求成功更新用户信息之前显示启动画面，请求更新完成才显示首页。
	缺点：请求延迟，请求结果确定
	优点：简单暴力
思路二：
先显示旧的首页，更新成后发送通知，动态切换页面
	缺点：比较复杂，切换点多，不易维护
	优点：减少启动延迟及结果不确定性，动态展示用户信息改变状态变化
思路三：
后台更新用户信息，留待下次进入前台或重新启动时更新展示界面
	缺点：不能及时反馈信息变化，旧的信息操作可能出现意料之外的情况
	优点：简单，能尽早对用户信息改变做出反应

问题二：
描述：
业绩模块四个分类的数据实时显示变化
非展示业绩页面不要刷新数据
后台数据来自多个业务系统，无法对数据改变做出监控，不能主动通知移动端

思路一：
1.写一个轮询器，以一定时间间隔进行请求
2.采用HTTP协议进行请求
缺点：HTTP延迟高，响应慢。对业绩模块所有分类进行轮询请求，无效请求多。
优点：简单

思路二：
1.轮询器加一个block事件注册和注销功能，当前分类页面进行注册，页面离开屏幕进行注销。只对注册页面进行请求轮询。
2.采用protocol隐藏不同页面的类型
2.采用webSocket替代HTTP协议，保持连接
缺点：socket连接保持要考虑许多临界情况的重连机制。
优点：低延迟，TCP握手次数，降低网络消耗。轮询器的注册和消毁功能保证了请求对应页面的单一，不用区分请求该返回哪个页面。

问题三：
1.页面是原生UI和html的组合，渲染完成是一个整体，可以同时上下滚动
2.原生UI和webViewneir高度不确定，分别来自两个请求
思路一：
1.建立headerView和webView直接的约束，headerView高度改变同时更新webView的frame
2.在UIWebViewDelegate的代理方法中- (void)webViewDidFinishLoad:计算scrollView的ContentSize高度，更新webView的高度，更新约束。
缺点：webViewDidFinishLoad这个方法调用时html可能并未加载完成，还有一些资源在异步加载。同时页面中的操作也可能重置页面的高度。
优点：简单
思路二：
1.采用JSContext关联html中JS的方法，这个js方法会在页面每次高度重置后调用，这样就可以在oc中重置webView的高度和约束
缺点：要以html页面为自己人写的为前提，js方法需要前端和移动人员协商。需要原生和js交互。
优点：能持续性响应html高度的变化
思路三：
1.采用KVO观察webView.scorllView的contentSize变化，进而更新webView的高度和约束。
缺点：记得remove KVO
优点：能持续性响应高度变化，同时保持oc与js的独立性

