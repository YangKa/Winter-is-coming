###消息传递机制

####block
优点：
1.功能代码集中，简洁
2.可作为属性、方法参数，使用方便
3.不同回调集中在一个方法
缺点：
1.block和快内对象容易相互持有，形成retain cycle
注意点：
1.块执行结束后对持有的block=nil
2.块内对持有block的对象weak引用


####delegate
优点：
1.一般用于事件响应或数据源的获取。消息可以双向传递。
2.一般认为是一对多的关系，其实也可以多对多，改为delegate列表
3.代码分散，功能清晰
缺点：
1.代码分散，不易阅读，方法名复杂
注意点：
1.每个代理方法建议带上委托者对象作为参数

####protocol 
delegate也是基于protocol，只是protocol不是作为某个对象的代理者，而是只遵守某些协议规则。其他对象可以通过这些规则传递参数。例如面向协议编程。

####notification 
优点：
通知是松耦合对象，发送者和接受者不需要知道对方。是一对多的模式。可以不关系接收对象的情况。
缺点：
比较分散，数据传递只有一个参数不方便。对象销毁时要注意移除通知。
注意点：
1.一是注意通知名的全局化，二是注册通知后在对象销毁时注意移除通知。

####target-action 
1.用于事件响应，一个事件可以建立多个target去响应。
2.action不需要知道target是谁，target也不需要知道需要响应那个action，耦合度比较松散，

####KVO 
对于某个值的变化而做出响应，可以采用这种方式。比例NSOperation的operation状态属性的改变情况(isFinished, isExecuting, isCancelled)。

####strong关键字 
strong属性关键值表示对该对象的强持有，不像指针类型的值引用。多个对象都strong持有同一个对象时，比例一个可变数组或model，任意一个持有者做出修改，其它持有者马上可以得到修改后的对象。
